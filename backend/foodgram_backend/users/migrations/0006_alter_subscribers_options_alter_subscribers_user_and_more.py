# Generated by Django 5.1.4 on 2025-02-10 18:00

import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_user_avatar'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='subscribers',
            options={'ordering': ('author',), 'verbose_name': 'Автор - подписчик', 'verbose_name_plural': 'Автор - подписчик'},
        ),
        migrations.AlterField(
            model_name='subscribers',
            name='user',
            field=models.ForeignKey(help_text='Укажите подписчика', on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to=settings.AUTH_USER_MODEL, verbose_name='Подписчик'),
        ),
        migrations.AlterField(
            model_name='user',
            name='avatar',
            field=models.ImageField(blank=True, help_text='Прикрепите аватар', null=True, upload_to='users/', verbose_name='Аватар'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(help_text='Укажите email', max_length=254, unique=True, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(help_text='Укажите имя', max_length=150, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(help_text='Укажите фамилию', max_length=150, verbose_name='Фамилия'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(help_text='Укажите никнейм пользователя', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Никнейм пользователя'),
        ),
        migrations.AddConstraint(
            model_name='subscribers',
            constraint=models.UniqueConstraint(fields=('author', 'user'), name='unique_author_user'),
        ),
        migrations.AddConstraint(
            model_name='subscribers',
            constraint=models.CheckConstraint(condition=models.Q(('author', models.F('user')), _negated=True), name='author_and_user_different'),
        ),
    ]
